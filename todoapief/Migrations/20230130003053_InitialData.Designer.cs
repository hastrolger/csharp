// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using todoapief;

#nullable disable

namespace todoapief.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20230130003053_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("todoapief.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("d78cfb1d-1f0a-4f55-bca5-0e78ea11252d"),
                            CategoryDescription = "Kind if personal activities",
                            CategoryName = "Personal activities",
                            Weight = 15
                        },
                        new
                        {
                            CategoryId = new Guid("5c6a28dc-c167-4b7d-aa7b-0f37f7e67f97"),
                            CategoryDescription = "Kind of job activities",
                            CategoryName = "Job activities",
                            Weight = 10
                        });
                });

            modelBuilder.Entity("todoapief.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("02c30a2d-3850-47e4-beb2-28a6d853ca39"),
                            CategoryId = new Guid("d78cfb1d-1f0a-4f55-bca5-0e78ea11252d"),
                            CreatedAt = new DateTime(2023, 1, 29, 19, 30, 53, 271, DateTimeKind.Local).AddTicks(5980),
                            TaskDescription = "Do the dish before go the bed",
                            TaskName = "Do the dishes",
                            TaskPriority = 0
                        },
                        new
                        {
                            TaskId = new Guid("4be134e4-c867-481e-9410-21fdb296e7e9"),
                            CategoryId = new Guid("5c6a28dc-c167-4b7d-aa7b-0f37f7e67f97"),
                            CreatedAt = new DateTime(2023, 1, 29, 19, 30, 53, 271, DateTimeKind.Local).AddTicks(6016),
                            TaskDescription = "Report of the monitoring service",
                            TaskName = "Prepare report of service",
                            TaskPriority = 2
                        });
                });

            modelBuilder.Entity("todoapief.Task", b =>
                {
                    b.HasOne("todoapief.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("todoapief.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
